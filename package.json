{
  "name": "health-watch",
  "displayName": "Health Watch",
  "description": "Multi-channel connectivity monitoring with automated reporting",
  "version": "1.0.0",
  "publisher": "GSejas",
  "icon": "resources/icon-128.png",
  "engines": {
    "vscode": "^1.103.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "network",
    "monitoring",
    "connectivity",
    "health",
    "vpn",
    "diagnostics"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "configuration": {
      "title": "Health Watch",
      "properties": {
        "healthWatch.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable Health Watch monitoring"
        },
        "healthWatch.defaults.intervalSec": {
          "type": "number",
          "default": 60,
          "minimum": 10,
          "description": "Default probe interval in seconds"
        },
        "healthWatch.defaults.timeoutMs": {
          "type": "number",
          "default": 3000,
          "minimum": 1000,
          "description": "Default probe timeout in milliseconds"
        },
        "healthWatch.defaults.threshold": {
          "type": "number",
          "default": 3,
          "minimum": 1,
          "description": "Default failure threshold before marking offline"
        },
        "healthWatch.defaults.jitterPct": {
          "type": "number",
          "default": 10,
          "minimum": 0,
          "maximum": 50,
          "description": "Default jitter percentage for probe intervals"
        },
        "healthWatch.watch.defaultDuration": {
          "type": "string",
          "default": "1h",
          "enum": [
            "1h",
            "12h",
            "forever"
          ],
          "description": "Default watch duration"
        },
        "healthWatch.watch.highCadenceIntervalSec": {
          "type": "number",
          "default": 15,
          "minimum": 5,
          "description": "Probe interval during active watch in seconds"
        },
        "healthWatch.https.allowProxy": {
          "type": "boolean",
          "default": true,
          "description": "Allow HTTPS probes to use system proxy"
        },
        "healthWatch.https.userAgent": {
          "type": "string",
          "default": "Health Watch VS Code Extension",
          "description": "User agent for HTTPS probes"
        },
        "healthWatch.quietHours.enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable quiet hours (suppress notifications)"
        },
        "healthWatch.quietHours.start": {
          "type": "string",
          "default": "22:00",
          "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]$",
          "description": "Quiet hours start time (24h format)"
        },
        "healthWatch.quietHours.end": {
          "type": "string",
          "default": "08:00",
          "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]$",
          "description": "Quiet hours end time (24h format)"
        },
        "healthWatch.report.autoOpen": {
          "type": "boolean",
          "default": true,
          "description": "Automatically open report when watch ends"
        },
        "healthWatch.report.includeSequenceDiagram": {
          "type": "boolean",
          "default": false,
          "description": "Include sequence diagrams in reports"
        },
        "healthWatch.report.includeTopologyDiagram": {
          "type": "boolean",
          "default": false,
          "description": "Include topology diagrams in reports"
        },
        "healthWatch.report.sloTarget": {
          "type": "number",
          "default": 99,
          "minimum": 0,
          "maximum": 100,
          "description": "SLO availability target percentage"
        },
        "healthWatch.onlyWhenFishy.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable 'only when fishy' mode for automated watch triggers"
        },
        "healthWatch.onlyWhenFishy.baselineIntervalSec": {
          "type": "number",
          "default": 60,
          "minimum": 30,
          "description": "Baseline probe interval in 'only when fishy' mode"
        },
        "healthWatch.script.enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable script probes (security warning will be shown)"
        }
      }
    },
    "commands": [
      {
        "command": "healthWatch.startWatch",
        "title": "Start Watch",
        "category": "Health Watch"
      },
      {
        "command": "healthWatch.stopWatch",
        "title": "Stop Watch",
        "category": "Health Watch"
      },
      {
        "command": "healthWatch.runAllNow",
        "title": "Run All Probes Now",
        "category": "Health Watch"
      },
      {
        "command": "healthWatch.openLastReport",
        "title": "Open Last Report",
        "category": "Health Watch"
      },
      {
        "command": "healthWatch.showDetails",
        "title": "Show Details",
        "category": "Health Watch"
      },
      {
        "command": "healthWatch.exportJSON",
        "title": "Export Data as JSON",
        "category": "Health Watch"
      },
      {
        "command": "healthWatch.refreshChannels",
        "title": "Refresh Channels",
        "category": "Health Watch"
      },
      {
        "command": "healthWatch.runChannelNow",
        "title": "Run Channel Now",
        "category": "Health Watch"
      },
      {
        "command": "healthWatch.pauseChannel",
        "title": "Pause Channel",
        "category": "Health Watch"
      },
      {
        "command": "healthWatch.resumeChannel",
        "title": "Resume Channel",
        "category": "Health Watch"
      }
    ],
    "views": {
      "explorer": [
        {
          "id": "healthWatchChannels",
          "name": "Health Watch",
          "when": "healthWatch.enabled"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "healthWatch.startWatch",
          "when": "view == healthWatchChannels",
          "group": "navigation"
        },
        {
          "command": "healthWatch.refreshChannels",
          "when": "view == healthWatchChannels",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "healthWatch.runChannelNow",
          "when": "view == healthWatchChannels && viewItem == channel",
          "group": "inline"
        },
        {
          "command": "healthWatch.pauseChannel",
          "when": "view == healthWatchChannels && viewItem == channel",
          "group": "management"
        },
        {
          "command": "healthWatch.resumeChannel",
          "when": "view == healthWatchChannels && viewItem == channel",
          "group": "management"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc --project tsconfig.test.json",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "vscode-test",
    "test:unit": "mocha out/test/unit/**/*.test.js",
    "test:e2e": "vscode-test --extensionDevelopmentPath=. --extensionTestsPath=./out/test/e2e",
    "test:all": "npm run test:unit && npm run test:e2e"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "22.x",
    "@types/vscode": "^1.103.0",
    "@typescript-eslint/eslint-plugin": "^8.39.0",
    "@typescript-eslint/parser": "^8.39.0",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2",
    "esbuild": "^0.25.8",
    "eslint": "^9.32.0",
    "npm-run-all": "^4.1.5",
    "ts-node": "^10.9.2",
    "typescript": "^5.9.2"
  },
  "dependencies": {
    "ajv": "^8.12.0"
  }
}
